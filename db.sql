drop database quiz;
create database quiz;
\c quiz

create table estudiante(
	id			int primary key,
	nombre		varchar(30),
	apellidos	varchar(45),
	edad		int
);

create table estudiante_curso(
	id 			int primary key GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1),
	estudiante 	int,
	curso 		int
);

create table curso(
	id				int primary key,
	descripcion		varchar(50),
	creditos		int
);
alter table estudiante_curso
	add constraint fk_curso foreign key(curso) references curso(id);
alter table estudiante_curso
	add constraint fk_estudiante foreign key(estudiante) references estudiante(id);
----------------------------------------------Cursos procedimientos-------------------------------

create or replace function retornacursos() returns setof curso as $$
 declare
	r curso%rowtype;
 begin
	for r in select *from curso 
	loop
		return next r;
	end loop;
 end; $$ language 'plpgsql';
 
create or replace function addcurso(cod int, des varchar, cre int) returns void as $$
 begin
	if not exists(select *from curso where id = cod) then	
		insert into curso(id, descripcion, creditos) values(cod, des, cre);
	else
		update curso set 
		descripcion = des,
		creditos = cre
		where id = cod;
	end if;
 end; $$ Language 'plpgsql'; 
 
create or replace function deletecurso(cod int) returns void as $$
 begin
	delete from curso where id = cod;
 end; $$ Language 'plpgsql';
 
create or replace function retornacurso(cod int) returns setof curso as 
 $$
 begin
	return query select *from curso where id = cod;
 end; $$ language 'plpgsql'; 
 
 
select addcurso(2001, 'Estructura de datos',4);
select addcurso(2002, 'Base de datos',4);
select addcurso(2003, 'Logica I',3);
select addcurso(2004, 'Informatica y sociedad',2);
------------------------------------------------------Estudiante-----------------------------

create or replace function retornaestudiantes() returns setof estudiante as $$
 declare
	r estudiante%rowtype;
 begin
	for r in select *from estudiante 
	loop
		return next r;
	end loop;
 end; $$ language 'plpgsql';
 
create or replace function addestudiante(cod int, nom varchar, ap varchar, ed int) returns void as $$
 begin
	if not exists(select *from estudiante where id = cod) then	
		insert into estudiante(id, nombre, apellidos, edad) values(cod, nom, ap, ed);
	else
		update estudiante set 
		nombre = nom,
		apellidos = ap,
		edad = ed
		where id = cod;
	end if;
 end; $$ Language 'plpgsql'; 
 
create or replace function deleteestudiante(cod varchar) returns void as $$
 begin
	delete from estudiante where id = cod;
 end; $$ Language 'plpgsql';
 
create or replace function retornaestudiante(cod int) returns setof estudiante as 
 $$
 begin
	return query select *from estudiante where id = cod;
 end; $$ language 'plpgsql';

select addestudiante(2005, 'Maria', 'Diaz Bonilla', 21); 
select addestudiante(2003, 'Alexis', 'Mendez Lobo', 23);
select addestudiante(2004, 'Alvaro', 'Mendez Ramirez', 18);

---------------------------relacion curso estudiante--------------------------------

create or replace function retornaestudiantecurso() returns setof estudiante_curso as $$
 declare
	r estudiante_curso%rowtype;
 begin
	for r in select *from estudiante_curso 
	loop
		return next r;
	end loop;
 end; $$ language 'plpgsql';
 
create or replace function addestudiante_curso(cod int, es int, cur int) returns void as $$
 begin
	if not exists(select *from estudiante_curso where id = cod) then	
		insert into estudiante_curso(estudiante, curso) values(es, cur);
	else
		update estudiante_curso set 
		estudiante = es,
		curso = cur
		where id = cod;
	end if;
 end; $$ Language 'plpgsql'; 
 
create or replace function deleteestudiante_curso(cod int) returns void as $$
 begin
	delete from estudiante_curso where id = cod;
 end; $$ Language 'plpgsql';
 
create or replace function retornaestudiante_curso(cod int) returns setof estudiante_curso as 
 $$
 begin
	return query select *from estudiante_curso where id = cod;
 end; $$ language 'plpgsql'; 


select addestudiante_curso(0, 2005,2001);
select addestudiante_curso(0, 2005,2002);